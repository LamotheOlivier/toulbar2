For official releases, the version is known. It does not need nor can
be generated because it depends on the git repository.--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -297,8 +297,6 @@
 
 IF(TOULBAR2)
   add_executable(toulbar2${EXE} ${source_files})
-  ADD_CUSTOM_TARGET(gen_version ALL /bin/sh ${CMAKE_CURRENT_SOURCE_DIR}/cmake-script/genVersionFile.sh)
-  SET_SOURCE_FILES_PROPERTIES(ToulbarVersion.hpp PROPERTIES GENERATED 1)
   TARGET_LINK_LIBRARIES(toulbar2${EXE} ${all_depends})
   INSTALL( TARGETS toulbar2${EXE} DESTINATION bin )
 ENDIF(TOULBAR2)
Index: toulbar2/CMakeLists.txt
===================================================================
--- toulbar2.orig/CMakeLists.txt
+++ toulbar2/CMakeLists.txt
@@ -9,7 +9,7 @@ cmake_minimum_required(VERSION 2.6)
 set (My_cmake_script "${CMAKE_CURRENT_SOURCE_DIR}/cmake-script") # location of cmake script needed 
 set (My_Source src)	# source location 
 set (My_doc "${CMAKE_CURRENT_SOURCE_DIR}/doc" ) # doxygen repository default ./doc/
-set (doc_destination "share/doc")   		#path of doc installation 
+set (doc_destination "share/doc")   		#path of doc installation
 set (My_validation "validation")		#validation test location
 set (My_benchmark "benchmarks")
 set (My_misc_source misc/src/)
@@ -92,7 +92,7 @@ IF(CPLEX)
 ENDIF(CPLEX)
 
 ##########################################
-## Compile Options on recent 64 bytes Macs. 
+## Compile Options on recent 64 bits Macs. 
 # thanks to alex rudnick 
 ##########################################
 IF(APPLE)
@@ -161,8 +161,8 @@ IF(ALL_APP)
         set (Toulbar_NAME "toulbar2-all")
         project(${Toulbar_NAME})
 #description used in the package building
-	SET(Toulbar_PACKAGE_DESCRIPTION "${Toulbar_NAME} is a free open source framework including solver and library for constraints network optimization, written in C++. Its purpose is solve combinatory problem in the weighted csp framework.")
-        SET(Toulbar_PACKAGE_SUMMARY "${Toulbar_NAME}  solver for network of cost function (WCSP framework)")
+	SET(Toulbar_PACKAGE_DESCRIPTION "${Toulbar_NAME} is a C++ free open source framework including a solver and a library for discrete graphical model optimization.")
+        SET(Toulbar_PACKAGE_SUMMARY "${Toulbar_NAME} Optimization solver for discrete garphical models (cost function networks)")
 
 ENDIF(ALL_APP)
 
@@ -185,8 +185,8 @@ IF(MENDELSOFT_ONLY)
 	set (Toulbar_NAME "mendelsoft")
 #description used in the package building
 	SET (Toulbar_PACKAGE_DESCRIPTION 
-	"MendelSoft is an open source software which detects marker genotyping incompatibilities (Mendelian errors only) in complex pedigrees using weighted constraint satisfaction techniques. The input of the software is a pedigree data with genotyping data at a single locus. The output of the software is a list of individuals for which the removal of their genotyping data restores consistency. This list is of minimum size when the program ends.") 
-        SET(Toulbar_PACKAGE_SUMMARY "${Toulbar_NAME} is an open source software which detect Mendelian errors  in complex pedigrees using weighted constraint satisfaction techniques")
+	"MendelSoft is an open source software which detects marker genotyping incompatibilities (Mendelian errors only) in complex pedigrees using weighted constraint satisfaction techniques. The input of the software is pedigree data with genotyping data at a single locus. The output of the software is a list of individuals such that the removal of their genotyping data restores consistency. This list is of minimum size/maximum probability when the program ends.") 
+        SET(Toulbar_PACKAGE_SUMMARY "${Toulbar_NAME} is an open source software which detect Mendelian errors in complex pedigrees using weighted constraint satisfaction techniques")
 #############
 
 ENDIF(MENDELSOFT_ONLY)
@@ -218,7 +218,7 @@ SET(LIBRARY_OUTPUT_PATH lib/${CMAKE_SYST
 #########################
 IF(WIN32)
 # option used for cross compilation 
-	set ( EXE ".exe")
+	set (EXE ".exe")
 	set(COST INT_COST)
 	set(LIBTB2INT OFF)
 	set(XML OFF)
@@ -240,7 +240,6 @@ ELSE(WIN32)
 	SET(COST LONGLONG_COST)
 	MESSAGE(STATUS "COST ==>  long long")
 
-
 ENDIF(WIN32)
 
 ###########
@@ -297,8 +296,6 @@ INCLUDE_DIRECTORIES ( ${CMAKE_CURRENT_SO
 
 IF(TOULBAR2)
   add_executable(toulbar2${EXE} ${source_files})
-  ADD_CUSTOM_TARGET(gen_version ALL /bin/sh ${CMAKE_CURRENT_SOURCE_DIR}/cmake-script/genVersionFile.sh)
-  SET_SOURCE_FILES_PROPERTIES(ToulbarVersion.hpp PROPERTIES GENERATED 1)
   TARGET_LINK_LIBRARIES(toulbar2${EXE} ${all_depends})
   INSTALL( TARGETS toulbar2${EXE} DESTINATION bin )
 ENDIF(TOULBAR2)
@@ -380,7 +377,7 @@ include(${My_cmake_script}/define_option
 MESSAGE(STATUS "######## define_option passed#########################")
 
 #################
-# test unitaire
+# Tests
 ###############
 
 IF(COVER_TEST) 
@@ -391,7 +388,7 @@ MESSAGE(STATUS "######## CTEST : toulbar
 
 #############
 # COVER TEST
-#########
+#############
 include(${My_cmake_script}/cover-test.cmake)
 ENDIF(COVER_TEST)
 
@@ -439,15 +436,32 @@ IF (BUILD_API_DOC)
 
 ENDIF (BUILD_API_DOC)
 
+ADD_CUSTOM_TARGET(man ALL)
+
+ADD_CUSTOM_COMMAND(
+  TARGET man
+  SOURCE ${CMAKE_CURRENT_SOURCE_DIR}/man/toulbar2.1
+  COMMAND cp ${CMAKE_CURRENT_SOURCE_DIR}/man/toulbar2.1 ${CMAKE_CURRENT_BINARY_DIR}/toulbar2.1
+  OUTPUTS ${CMAKE_CURRENT_BINARY_DIR}/toulbar2.1
+)
+
+ADD_CUSTOM_COMMAND(
+  TARGET man
+  SOURCE man
+  DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/toulbar2.1
+)
+
 ###########
 # doc install
 ###########
-         install(DIRECTORY ${My_doc} DESTINATION ${doc_destination}/${Toulbar_NAME_COMPLETE} PATTERN ".svn" EXCLUDE)
+
+   install(DIRECTORY ${My_doc} DESTINATION ${doc_destination}/${Toulbar_NAME} PATTERN ".svn" EXCLUDE)
+   install(FILES ${CMAKE_CURRENT_BINARY_DIR}/toulbar2.1 DESTINATION ${CMAKE_INSTALL_PREFIX}/share/man/man1)
 
 ########
 # examples installation
 ########
-         install(DIRECTORY ${My_validation} DESTINATION ${doc_destination}/${Toulbar_NAME_COMPLETE}/ PATTERN ".svn" EXCLUDE)
+         install(DIRECTORY ${My_validation} DESTINATION ${doc_destination}/${Toulbar_NAME}/ PATTERN ".svn" EXCLUDE)
 
 ###################################################################################"
 #  PACKAGING 
